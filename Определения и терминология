""" Модификаторы доступа класса определяют уровень доступа к атрибутам и методам класса. В языке программирования Python 
есть три основных модификатора доступа: public (открытый), private (закрытый) и protected (защищенный).

- Public (открытый) модификатор доступа позволяет свободный доступ к атрибутам и методам класса из любого места кода 
в программе. Он обозначается отсутствием перед атрибутом или методом специальных символов. Например: 
`self.name = "John"`

- Private (закрытый) модификатор доступа позволяет доступ только внутри самого класса. Он обозначается символом 
подчеркивания перед именем атрибута или метода. Например: `self._age = 25`. Это соглашение, а не ограничение. 
Интерпретатор Python не препятствует доступу к закрытым атрибутам и методам, но разработчикам рекомендуется не 
обращаться к ним напрямую извне класса.

- Protected (защищенный) модификатор доступа также ограничивает доступ только внутри класса, а также внутри его 
потомков (наследников). Он обозначается символом двойного подчеркивания перед именем атрибута или метода. 
Например: `self.__email = "john@example.com"`. Защищенный доступ используется, чтобы дать доступ к атрибутам 
класса его потомкам, но при этом ограничить доступ извне класса.

Различие между модификаторами состоит в уровне доступности атрибутов и методов класса. Public позволяет свободный 
доступ, private ограничивает доступ только внутри класса, а protected ограничивает доступ внутри класса и его 
потомков.

Модификаторы доступа используются для контроля доступа к атрибутам и методам класса с целью обеспечения безопасности 
и инкапсуляции. Они позволяют скрыть некоторые детали реализации класса от внешнего кода и обеспечить более четкую 
структуру программы. """
